{
	"services": [{
		"nanoentities": ["Leg.loadLocation", "Voyage.voyageNumber", "CarrierMovement.departureLocation", "CarrierMovement.arrivalLocation", "CarrierMovement.departureTime", "CarrierMovement.arrivalTime"],
		"id": "A",
		"name": "Service A"
	}, {
		"nanoentities": ["Cargo.trackingId", "RouteSpecification.origin", "RouteSpecification.destination", "RouteSpecification.arrivalDeadline", "Itinerary.itineraryNumber", "Itinerary.Endpoint"],
		"id": "B",
		"name": "Service B"
	}, {
		"nanoentities": ["Delivery.misdirected", "Delivery.estimatedArrivalTime", "Delivery.isUnloadedAtDestination", "Delivery.routingStatus", "HandlingEvent.completionTime", "HandlingEvent.registrationTime"],
		"id": "C",
		"name": "Service C"
	}],
	"relations": [{
		"serviceA": "Service A",
		"serviceB": "Service B",
		"sharedEntities": ["CarrierMovement.arrivalTime", "CarrierMovement.departureLocation", "CarrierMovement.arrivalLocation", "CarrierMovement.departureTime"],
		"direction": "INCOMING"
	}, {
		"serviceA": "Service B",
		"serviceB": "Service C",
		"sharedEntities": ["Location.unLocode", "Leg.loadLocation", "Voyage.voyageNumber", "Delivery.routingStatus"],
		"direction": "OUTGOING"
	}],
	"useCaseResponsibility": {
		"Service C": ["Create Location", "ChangeCargoDestination", "RouteCargo"],
		"Service B": ["ViewTracking", "ViewCargos", "BookCargo"],
		"Service A": ["Create Voyage", "AddCarrierMovement", "handleCargoEvent"]
	},
	"repo": {
		"url": "https://github.com/javaee/cargotracker.git",
		"languages": [".java"]
	}
}