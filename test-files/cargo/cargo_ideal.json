{
  "services": [
    {
      "nanoentities": [
        "CarrierMovement.departureLocation",
        "CarrierMovement.arrivalLocation",
        "CarrierMovement.departureTime",
        "CarrierMovement.arrivalTime"
      ],
      "id": "A",
      "name": "Service A"
    },
    {
      "nanoentities": [
        "Delivery.transportStatus",
        "Delivery.estimatedArrivalTime",
        "Delivery.isUnloadedAtDestination",
        "Delivery.routingStatus"
      ],
      "id": "B",
      "name": "Service B"
    },
    {
      "nanoentities": [
        "HandlingEvent.type",
        "HandlingEvent.completionTime",
        "HandlingEvent.registrationTime",
        "HandlingEvent.location"
      ],
      "id": "C",
      "name": "Service C"
    }
  ],
  "relations": [
    {
      "serviceA": "Service B",
      "serviceB": "Service A",
      "sharedEntities": [
        "CarrierMovement.arrivalTime",
        "CarrierMovement.departureLocation",
        "CarrierMovement.arrivalLocation",
        "CarrierMovement.departureTime"
      ],
      "direction": "INCOMING"
    },
    {
      "serviceA": "Service B",
      "serviceB": "Service C",
      "sharedEntities": [
        "HandlingEvent.type",
        "HandlingEvent.completionTime",
        "HandlingEvent.registrationTime",
        "HandlingEvent.location"
      ],
      "direction": "OUTGOING"
    }
  ],
  "useCaseResponsibility": {
    "Service C": [
      "Create Location",
      "Book Location",
      "Dispose Location"
    ],
    "Service B": [
      "ViewCargos",
      "RouteCargo",
      "handleCargoEvent"
    ],
    "Service A": [
      "Create Voyage",
      "AddCarrierMovement",
      "ViewTracking"
    ]
  },
  "repo": {
    "url": "https://github.com/javaee/cargotracker.git",
    "languages": [
      ".java"
    ]
  }
}