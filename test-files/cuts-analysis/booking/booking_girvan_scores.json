{
  "NewChecker": {
    "NEWATTRIBUTE_TEST": {
      "testName": "NEWATTRIBUTE_TEST",
      "name": "NEWATTRIBUTE_TEST",
      "score": 0.0,
      "cause": "Fill in the cause of the test fail.",
      "treatment": "Fill in the recommendation for fixing the fail.",
      "details": null
    }
  },
  "CouplingChecker": {
    "DEPENDENCIES_COMPOSITION_TEST": {
      "testName": "DEPENDENCIES_COMPOSITION_TEST",
      "name": "DEPENDENCIES_COMPOSITION_TEST",
      "score": 2.9,
      "cause": "We detected an abnormally high variation between inward vs outward dependencies count per microservice!",
      "treatment": "We recommend revising the dependencies between components.",
      "details": "Service \"Service A\" has 0 outward dependencies.\nService \"Service B\" has 1 outward dependencies.\nService \"Service C\" has 1 outward dependencies.\nService \"Service D\" has 2 outward dependencies.\n"
    },
    "SCC_TEST": {
      "testName": "SCC_TEST",
      "name": "SCC_TEST",
      "score": 10.0,
      "cause": "We identified no strongly connected components between the microservices.",
      "treatment": "Nothing.",
      "details": "No details."
    }
  },
  "GranularityChecker": {
    "NANOENTITIES_COMPOSITION_TEST": {
      "testName": "NANOENTITIES_COMPOSITION_TEST",
      "name": "NANOENTITIES_COMPOSITION_TEST",
      "score": 2.3,
      "cause": "We detected high variation between microservice's sizes.",
      "treatment": "We recommend reconsidering the sizes of the microservices.",
      "details": "Service \"Service A\" has 2 nanoentities.\nService \"Service B\" has 5 nanoentities.\nService \"Service C\" has 7 nanoentities.\nService \"Service D\" has 2 nanoentities.\n"
    }
  },
  "CohesionChecker": {
    "ENTITIES_COMPOSITION_TEST": {
      "testName": "ENTITIES_COMPOSITION_TEST",
      "name": "ENTITIES_COMPOSITION_TEST",
      "score": 3.1,
      "cause": "We detected an abnormally high variation between entities counts per microservice.",
      "treatment": "We recommend reconsidering the sizes of the microservices.",
      "details": "Service \"Service A\" has 1 entities.\nService \"Service B\" has 1 entities.\nService \"Service C\" has 2 entities.\nService \"Service D\" has 1 entities.\n"
    },
    "RESNIK": {
      "testName": "SEMANTIC_SIMILARITY_TEST",
      "name": "SEMANTIC_SIMILARITY_TEST",
      "score": 8.1,
      "cause": "We detected optimal semantic similarity between the entities per microservice.",
      "treatment": "Nothing.",
      "details": null
    },
    "LIN": {
      "testName": "SEMANTIC_SIMILARITY_TEST",
      "name": "SEMANTIC_SIMILARITY_TEST",
      "score": 9.8,
      "cause": "We detected optimal semantic similarity between the entities per microservice.",
      "treatment": "Nothing.",
      "details": null
    },
    "PATH": {
      "testName": "SEMANTIC_SIMILARITY_TEST",
      "name": "SEMANTIC_SIMILARITY_TEST",
      "score": 9.8,
      "cause": "We detected optimal semantic similarity between the entities per microservice.",
      "treatment": "Nothing.",
      "details": null
    },
    "WU_PALMER": {
      "testName": "SEMANTIC_SIMILARITY_TEST",
      "name": "SEMANTIC_SIMILARITY_TEST",
      "score": 9.1,
      "cause": "We detected optimal semantic similarity between the entities per microservice.",
      "treatment": "Nothing.",
      "details": null
    },
    "LESK": {
      "testName": "SEMANTIC_SIMILARITY_TEST",
      "name": "SEMANTIC_SIMILARITY_TEST",
      "score": 10.0,
      "cause": "We detected optimal semantic similarity between the entities per microservice.",
      "treatment": "Nothing.",
      "details": null
    },
    "JIANG_CONRATH": {
      "testName": "SEMANTIC_SIMILARITY_TEST",
      "name": "SEMANTIC_SIMILARITY_TEST",
      "score": 9.9,
      "cause": "We detected optimal semantic similarity between the entities per microservice.",
      "treatment": "Nothing.",
      "details": null
    },
    "RESPONSIBILITIES_COMPOSITION_TEST": {
      "testName": "RESPONSIBILITIES_COMPOSITION_TEST",
      "name": "RESPONSIBILITIES_COMPOSITION_TEST",
      "score": 1.3,
      "cause": "We detected an abnormally high variation between the use-cases counts per microservice.",
      "treatment": "We recommend revising the use cases.",
      "details": "Service \"Service D\" has 1 use cases.\nService \"Service C\" has 3 use cases.\nService \"Service B\" has 1 use cases.\n"
    },
    "RELATIONS_COMPOSITION_TEST": {
      "testName": "RELATIONS_COMPOSITION_TEST",
      "name": "RELATIONS_COMPOSITION_TEST",
      "score": 0.0,
      "cause": "We detected an abundance of duplicates among the entities of different relations.",
      "treatment": "We recommend revising the relations between the microservices.",
      "details": "Entity \"Customer\" has 2 duplicates.\n"
    },
    "LEACOCK_CHODOROW": {
      "testName": "SEMANTIC_SIMILARITY_TEST",
      "name": "SEMANTIC_SIMILARITY_TEST",
      "score": 7.4,
      "cause": "We detected an acceptable semantic similarity between the entities per microservice.",
      "treatment": "We recommend renaming the entities.",
      "details": null
    },
    "HIRST_ST_ONGE": {
      "testName": "SEMANTIC_SIMILARITY_TEST",
      "name": "SEMANTIC_SIMILARITY_TEST",
      "score": 10.0,
      "cause": "We detected optimal semantic similarity between the entities per microservice.",
      "treatment": "Nothing.",
      "details": null
    }
  }
}